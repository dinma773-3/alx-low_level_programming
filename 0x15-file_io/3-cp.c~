#include "main.h"
#include <fcntl.h>

#define BUFFER_SIZE 1024
/**
 * main - copies the content of a file to another file
 * @argc: number of arguments
 * @argv: array of pointers to the argument
 *
 * Return: if successful return 0 otherwise return an exit code
 */
int main(int argc, char *argv[])
{
  int fr, ft, read_num, written_num;
  char buff[BUFFER_SIZE];

  if (argc != 3)
    {
      dprintf(STDERR_FILENO, "Usage: %s file_from file_to\n", argv[0]);
      exit(97);
    }

  fr = open(argv[1], O_RDONLY);
  if (fr < 0)
    {
      dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", argv[1]);
      exit(98);
    }

  ft = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, 0664);
  if (ft < 0)
    {
      dprintf(STDERR_FILENO, "Error: Can't write to file %s\n", argv[2]);
      exit(99);
    }

  while ((read_num = read(fr, buff, BUFFER_SIZE)) > 0)
        {
      written_num = write(ft, buff, read_num);
      if (written_num != read_num)
        {
          dprintf(STDERR_FILENO, "Error: Can't write to file %s\n", argv[2]);
          exit(99);
        }
    }

  if (read_num < 0)
    {
      dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", argv[1]);
      exit(98);
    }

  if (close(fr) < 0)
    {
      dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fr);
      exit(100);
    }

  if (close(ft) < 0)
    {
      dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", ft);
      exit(100);
    }
  return 0;
}
